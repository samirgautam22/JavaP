package com.project.grocery.controller;


import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import java.util.Map;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.project.grocery.dto.LoginDto;
import com.project.grocery.request.ForgetPasswordRequest;
import com.project.grocery.request.ResetPasswordRequest;
import com.project.grocery.responce.Responce;
import com.project.grocery.service.LoginService;

import io.swagger.annotations.ApiOperation;

/**
 * @author:Samir Gautam
 * @Version:1.0
 * @Date:May 5, 2018
 * 
 */
@RestController
@RequestMapping("/api/v1")
public class LoginController {

	private static final Logger LOG = LoggerFactory.getLogger(LoginController.class);

	@Autowired
	private LoginService loginService;

	@RequestMapping(value = "/login", method = RequestMethod.POST)
	@ApiOperation(value="login Api",notes="Api to Login")
	public ResponseEntity<Object> login(HttpServletRequest request,@Valid @RequestBody LoginDto loginDto) {
		LOG.debug("Login Request");
		Map<Object, Object> response =loginService.logInUser(request,loginDto);
		return new ResponseEntity<Object>(response, HttpStatus.OK);
	}
	@ApiOperation(value="login Api",notes="Api to Logout")
	@RequestMapping(value = "/logout", method = RequestMethod.GET)
	public ResponseEntity<Object> logout(@RequestHeader Long loginId) {
		System.out.println(loginId);
		loginService.logout(loginId);
		Responce responce=new Responce("You are loged out from the system");
		return new ResponseEntity<Object>(responce,HttpStatus.OK);
	}
	@ApiOperation(value="forget passwprd",notes="Api to forget password")
	@RequestMapping(value = "/forgetPassword", method = RequestMethod.POST)
	public ResponseEntity<Object> forgetPassword(@RequestBody ResetPasswordRequest request){
		LOG.debug("Request Accepted for Reset password");
		
		loginService.resetPassword(request);
		Responce responce=new Responce("Check your  Email for reset link");
		return new ResponseEntity<Object>(responce,HttpStatus.OK);
	}
	@ApiOperation(value="Api to reset password",notes="Api to reset password")
	@RequestMapping(value="/resetPassword/{value}",method=RequestMethod.POST)
	public ResponseEntity<Object> resetPassword(@PathVariable ("value") String token,@RequestBody ForgetPasswordRequest forgetPasswordRequest){
		LOG.debug("Request Accepted to reset password");
		System.out.println(token);
		loginService.resetForgetPassword(token,forgetPasswordRequest);
		Responce responce=new Responce("Password Changed Login to continue");
		return new ResponseEntity<Object>(responce,HttpStatus.OK);
	}
	
	@ApiOperation(value="token check")
	@RequestMapping(value="/checkToken",method=RequestMethod.GET)
	public ResponseEntity<Object> checkToken(@RequestHeader String token){
		LOG.debug("Token checking");
		System.out.println(token);
		loginService.chekToken(token);
		  Responce responce=new Responce("Token is valid");
		return new ResponseEntity<Object>(responce,HttpStatus.OK);
	}
	
}
