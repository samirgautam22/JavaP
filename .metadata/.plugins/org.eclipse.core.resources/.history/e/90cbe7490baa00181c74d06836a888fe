package com.project.grocery.controller;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.project.grocery.request.ContactCreatationRequest;
import com.project.grocery.responce.ContactResponce;
import com.project.grocery.responce.Responce;
import com.project.grocery.service.ContactService;
import com.project.grocery.service.CustomerService;

import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

/**
 * @author:Samir Gautam
 * @Version:1.0
 * @Date:Aug 27, 2018
 * 
 */
@RestController
@RequestMapping(value="api/va/contact")
public class ContactController {
	private static final Logger LOG = LoggerFactory.getLogger(ContactController.class);
	
	
	@Autowired
	ContactService contactService;
	
	
	@RequestMapping(value="/createCustomer",method=RequestMethod.POST)
	public ResponseEntity<Object> createCustomer(@Validated @RequestBody ContactCreatationRequest 
			contactCreationRequest){
		   LOG.debug("Contact Creation request");
		   contactService.saveContact(contactCreationRequest);
		   Responce responce=new Responce("Thanks for contacting us we will you as soon as possible.");
		return new ResponseEntity<Object>(responce,HttpStatus.CREATED);
	}
	
	@ApiImplicitParams({
		@ApiImplicitParam(name="token",required=true,dataType="String",paramType="header")})
	@ApiOperation(value="delete contact",notes="Api to delete contact")
	@RequestMapping(value="/{id}",method=RequestMethod.DELETE)
	public ResponseEntity<Object> deleteContact(@RequestHeader Long userId,@PathVariable("id") Long id){
		 LOG.debug("Contact Delete request");
		 contactService.deleteContact(userId,id);
		   Responce responce=new Responce("Contact Deleted");
		return new ResponseEntity<Object>(responce,HttpStatus.OK);
	}
	@ApiImplicitParams({
		@ApiImplicitParam(name="token",required=true,dataType="String",paramType="header")})
	@ApiOperation(value="List All Contact ",notes="Api to List Contact")
	@RequestMapping(value="/listAllContact",method=RequestMethod.GET)
	public ResponseEntity<Object> listAllContact(@RequestHeader Long userId){
		LOG.debug("Request To List all contact");
		List<ContactResponce> responce =contactService.listAllContact(userId);
		return new ResponseEntity<Object>(responce,HttpStatus.OK);
	}
	

}
